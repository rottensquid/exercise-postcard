{"telemetry_id":"a9a7mfaf3zkc25p8","slug":"exercise-postcard","agent":"vscode","tutorial_started_at":1727220579105,"steps":[{"slug":"00-welcome","position":0,"files":[{"path":".learn/exercises/00-welcome/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/00-welcome/README.md","name":"README.md","hidden":true}],"ai_interactions":[{"starting_at":1727301158017,"student_message":"im stuck\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # Welcome!\n\nWelcome to your Digital Postcard Project üññüßë‚Äçüíª\n\n## üí¨ Fundamentals:\n\nWe have prepared a series of exercises where you will practice everything you have learned so far about HTML and CSS.\n\n1. Create a basic `HTML` structure.\n\n2. Use previously seen tags from scratch.\n\n3. Connect stylesheets.\n\n4. Apply different styles with `CSS` to spice up your project.\n\n5. Manage `<divs>`.\n\n## Useful Readings:\n\n+ [https://www.w3schools.com/TAgs/default.asp](https://www.w3schools.com/TAgs/default.asp)\n\n+ [https://www.w3schools.com/html/html_css.asp](https://www.w3schools.com/html/html_css.asp)\n\n## Useful Video:\n\n+ [https://youtu.be/rvVPyewhFSU](https://youtu.be/rvVPyewhFSU)\n\n## Contributors:\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) :computer: (idea) ü§î, (build-tests) :warning:, (pull-request-review) :eyes: (build-tutorial) :white_check_mark: (documentation) :book:\n\n2. [Paolo Lucano (plucodev)](https://github.com/plucodev), contribution: (coder), (build-tests) :warning:\n\n3. [Marco G√≥mez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (translator) :earth_africa:\n\nThis project follows these specifications: [all-contributors](https://github.com/kentcdodds/all-contributors)\n\nContributions of any kind are welcome!\n\n> üîπ We built the exercises incrementally, you should feel the progress little by little, and hopefully, the difficulty raising between exercises will never be too big to get you frustrated.\n\nNote: Don't get frustrated! Ask any question in the #public_support channel or by private message following [these steps](https://content.breatheco.de/es/how-to/ask). \n\n‚û°Ô∏è Click the `next` button on the top of these instructions to begin with the first exercise...\n\n\n\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1727301164430,"ai_response":"Let's break down the task into smaller, manageable steps. This way, we can identify where you might be stuck and how to proceed. \n\n1. **Basic HTML Structure**: Have you created the basic HTML structure for your postcard? This includes the `<!DOCTYPE html>`, `<html>`, `<head>`, and `<body>` tags.\n\n2. **Linking CSS**: Have you linked your CSS file to your HTML file using the `<link>` tag inside the `<head>` section?\n\n3. **Content Layout**: Have you added the main content of the postcard, such as text, images, and any other elements?\n\n4. **Styling with CSS**: Have you started applying styles to your elements using CSS? This includes setting fonts, colors, margins, padding, etc.\n\n5. **Using Google Fonts**: Have you added any custom fonts from Google Fonts to your project?\n\nLet's start with the first step. Can you show me the basic HTML structure you have so far? This will help us identify where you might need assistance."},{"starting_at":1727301210510,"student_message":"im stuck\n","context":"---\n      # File name: .devcontainer. Content: \n      `Error: This is not a file to be read, but a directory: ./.devcontainer`\n      ---\n      \n---\n      # File name: .exercise. Content: \n      `Error: This is not a file to be read, but a directory: ./.exercise`\n      ---\n      \n---\n      # File name: .git. Content: \n      `Error: This is not a file to be read, but a directory: ./.git`\n      ---\n      \n---\n      # File name: .github. Content: \n      `Error: This is not a file to be read, but a directory: ./.github`\n      ---\n      \n---\n      # File name: .gitignore. Content: \n      `.theia\n\n.learn/_app\n.learn/.session\n.learn/dist\n.learn/reports\napp.tar.gz\nconfig.json\nvscode_queue.json\n!.vscode`\n      ---\n      \n---\n      # File name: .gitpod.Dockerfile. Content: \n      `FROM gitpod/workspace-full\n\nUSER gitpod\n\nRUN npm i jest@29.7.0 jest-environment-jsdom@29.7.0 -g\nRUN npm i @learnpack/learnpack@4.0.8 -g && learnpack plugins:install @learnpack/node@1.1.12 && learnpack plugins:install @learnpack/html@1.1.7\n`\n      ---\n      \n---\n      # File name: .gitpod.yml. Content: \n      `image:\n  file: .gitpod.Dockerfile\n\n# List the ports you want to expose and what to do when they are served. See https://www.gitpod.io/docs/config-ports/\nports:\n  - port: 3000\n    onOpen: ignore\n\nvscode:\n  extensions:\n    - learn-pack.learnpack-vscode\n    \ngithub:\n    prebuilds:\n        # enable for the master/default branch (defaults to true)\n        master: true\n        # enable for pull requests coming from this repo (defaults to true)\n        pullRequests: false\n        # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to true)\n        addComment: false\n`\n      ---\n      \n---\n      # File name: .learn. Content: \n      `Error: This is not a file to be read, but a directory: ./.learn`\n      ---\n      \n---\n      # File name: .vscode. Content: \n      `Error: This is not a file to be read, but a directory: ./.vscode`\n      ---\n      \n---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: index.html. Content: \n      `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">\n\t\t\t<div class=\"postcard-header\">\n\t\t\t\t<h1>My Postcard</h1>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"postcard-body\">\n\t\t\t\t<div class=\"body-left\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLook how awesome! This is a<br />\n\t\t\t\t\t\tpostcard that I created using<br />\n\t\t\t\t\t\tHTML5 and CSS3 during my<br />\n\t\t\t\t\t\t4Geeks Academy Course!\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is so cool, can't wait to<br />\n\t\t\t\t\t\tstart new projects!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"body-right\">\n\t\t\t\t\t<p>Some Name</p>\n\t\t\t\t\t<p>Some Email</p>\n\t\t\t\t\t<p>Some Comment</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"postcard-footer\"></div>\n\t\t</div>\n\t</body>\n</html>\n`\n      ---\n      \n---\n      # File name: learn.json. Content: \n      `{\n    \"title\": \"Build a Digital Postcard with HTML/CSS\",\n    \"slug\": \"exercise-postcard\",\n    \"status\": \"published\",\n    \"grading\": \"incremental\",\n    \"translations\": [\n        \"es\",\n        \"us\"\n    ],\n    \"repository\": \"https://github.com/breatheco-de/exercise-postcard\",\n    \"solution\": \"https://github.com/breatheco-de/exercise-postcard/tree/solution\",\n    \"duration\": 4,\n    \"language\": \"auto\",\n    \"skills\": [\n        \"html-layouts\"\n    ],\n    \"difficulty\": \"beginner\",\n    \"videoSolutions\": true, \n    \"bugsLink\": \"https://github.com/learnpack/learnpack/issues/new\",\n    \"projectType\": \"tutorial\",\n    \"technologies\": [\n        \"html\",\n        \"css\",\n\t\"layouts\"\n    ],\n    \"description\": \"Replicate this postcard with CSS and HTML\",\n    \"preview\": \"https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true\",\n    \"talents\": [\n        {\n            \"badge\": \"identator\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"tag-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"path-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"select-everything\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"be-dry\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"abc\",\n            \"points\": 10\n        }\n    ],\n    \"editor\": {\n        \"version\": \"4.0.0\"\n    },\n\t\"video\": {\n\t\t\"intro\": {\n\t\t\t\"en\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\",\n\t\t\t\"es\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\"\n\t\t}\n    }\n}\n`\n      ---\n      \n---\n      # File name: styles.css. Content: \n      `body {\n\tbackground: black;\n}\n* {\n\tborder: 1px dashed red;\n\tmin-height: 10px;\n}\n.postcard {\n\tbackground: white;\n\twidth: 400px;\n\theight: 300px;\n\tmargin: auto;\n}\n.postcard-header {\n\tdisplay: flex;\n}\n.postcard-header img {\n\theight: 38px;\n\twidth: 38px;\n\tmargin-left: auto;\n}\n.postcard-header h1 {\n\twidth: 400px;\n\tmargin-right: auto;\n\tmargin-top: auto;\n}\n.postcard-body {\n\tdisplay: flex;\n}\n.body-left p:first-child {\n\tmargin-top: 0px;\n\tmargin-right: auto;\n}\n\n.body-left,\n.body-right {\n\tpadding: 10px;\n}\ninput {\n\tborder: x;\n\tborder-bottom: x;\n}\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # Welcome!\n\nWelcome to your Digital Postcard Project üññüßë‚Äçüíª\n\n## üí¨ Fundamentals:\n\nWe have prepared a series of exercises where you will practice everything you have learned so far about HTML and CSS.\n\n1. Create a basic `HTML` structure.\n\n2. Use previously seen tags from scratch.\n\n3. Connect stylesheets.\n\n4. Apply different styles with `CSS` to spice up your project.\n\n5. Manage `<divs>`.\n\n## Useful Readings:\n\n+ [https://www.w3schools.com/TAgs/default.asp](https://www.w3schools.com/TAgs/default.asp)\n\n+ [https://www.w3schools.com/html/html_css.asp](https://www.w3schools.com/html/html_css.asp)\n\n## Useful Video:\n\n+ [https://youtu.be/rvVPyewhFSU](https://youtu.be/rvVPyewhFSU)\n\n## Contributors:\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) :computer: (idea) ü§î, (build-tests) :warning:, (pull-request-review) :eyes: (build-tutorial) :white_check_mark: (documentation) :book:\n\n2. [Paolo Lucano (plucodev)](https://github.com/plucodev), contribution: (coder), (build-tests) :warning:\n\n3. [Marco G√≥mez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (translator) :earth_africa:\n\nThis project follows these specifications: [all-contributors](https://github.com/kentcdodds/all-contributors)\n\nContributions of any kind are welcome!\n\n> üîπ We built the exercises incrementally, you should feel the progress little by little, and hopefully, the difficulty raising between exercises will never be too big to get you frustrated.\n\nNote: Don't get frustrated! Ask any question in the #public_support channel or by private message following [these steps](https://content.breatheco.de/es/how-to/ask). \n\n‚û°Ô∏è Click the `next` button on the top of these instructions to begin with the first exercise...\n\n\n\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1727301226384,"ai_response":"Let's break down the task into smaller, manageable steps. The goal is to create a digital postcard using HTML and CSS that looks like the provided image. \n\n### Step-by-Step Guide:\n\n1. **Basic HTML Structure**:\n    - Ensure you have a basic HTML structure in place. This includes the `<!DOCTYPE html>`, `<html>`, `<head>`, and `<body>` tags.\n\n2. **Linking CSS**:\n    - Make sure your CSS file is linked correctly in the `<head>` section of your HTML file.\n\n3. **Creating the Postcard Layout**:\n    - Use `<div>` elements to create the structure of the postcard. You will need a container for the postcard, a header, a body, and a footer.\n\n4. **Styling with CSS**:\n    - Apply styles to your HTML elements to match the design. This includes setting background colors, font styles, margins, paddings, and borders.\n\n### Let's start with the HTML structure:\n\n1. **HTML Structure**:\n    - You already have a good start with your `index.html` file. Ensure it looks something like this:\n\n    ```html\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Postcard</title>\n        <link rel=\"stylesheet\" href=\"styles.css\">\n    </head>\n    <body>\n        <div class=\"postcard\">\n            <div class=\"postcard-header\">\n                <h1>My Postcard</h1>\n                <img src=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\" alt=\"4Geeks Logo\">\n            </div>\n            <div class=\"postcard-body\">\n                <div class=\"body-left\">\n                    <p>Look how awesome! This is a<br>postcard that I created using<br>HTML5 and CSS3 during my<br>4Geeks Academy Course!</p>\n                    <p>This is so cool, can't wait to<br>start new projects!</p>\n                </div>\n                <div class=\"body-right\">\n                    <p>Some Name</p>\n                    <p>Some Email</p>\n                    <p>Some Comment</p>\n                </div>\n            </div>\n            <div class=\"postcard-footer\"></div>\n        </div>\n    </body>\n    </html>\n    ```\n\n2. **CSS Styling**:\n    - Your `styles.css` file should style the postcard to match the provided image. Here are some tips:\n        - Set the background color of the body to black.\n        - Style the `.postcard` class to have a white background, specific width, and height.\n        - Use flexbox to align items in the header and body sections.\n        - Add padding and margins as needed to space out elements.\n\n### Questions to Reflect On:\n- How can you use flexbox to align items horizontally and vertically?\n- What CSS properties can help you control the spacing between elements?\n- How can you ensure that your image and text are properly aligned within the header?\n\n### Next Steps:\n- Try implementing the suggestions above and see how your postcard looks.\n- If you encounter specific issues, describe them, and we can troubleshoot together.\n\nFeel free to share your updated code or any specific problems you're facing!"},{"starting_at":1727301260001,"student_message":"What CSS properties can help me control the spacing between elements?","context":"---\n      # File name: .devcontainer. Content: \n      `Error: This is not a file to be read, but a directory: ./.devcontainer`\n      ---\n      \n---\n      # File name: .exercise. Content: \n      `Error: This is not a file to be read, but a directory: ./.exercise`\n      ---\n      \n---\n      # File name: .git. Content: \n      `Error: This is not a file to be read, but a directory: ./.git`\n      ---\n      \n---\n      # File name: .github. Content: \n      `Error: This is not a file to be read, but a directory: ./.github`\n      ---\n      \n---\n      # File name: .gitignore. Content: \n      `.theia\n\n.learn/_app\n.learn/.session\n.learn/dist\n.learn/reports\napp.tar.gz\nconfig.json\nvscode_queue.json\n!.vscode`\n      ---\n      \n---\n      # File name: .gitpod.Dockerfile. Content: \n      `FROM gitpod/workspace-full\n\nUSER gitpod\n\nRUN npm i jest@29.7.0 jest-environment-jsdom@29.7.0 -g\nRUN npm i @learnpack/learnpack@4.0.8 -g && learnpack plugins:install @learnpack/node@1.1.12 && learnpack plugins:install @learnpack/html@1.1.7\n`\n      ---\n      \n---\n      # File name: .gitpod.yml. Content: \n      `image:\n  file: .gitpod.Dockerfile\n\n# List the ports you want to expose and what to do when they are served. See https://www.gitpod.io/docs/config-ports/\nports:\n  - port: 3000\n    onOpen: ignore\n\nvscode:\n  extensions:\n    - learn-pack.learnpack-vscode\n    \ngithub:\n    prebuilds:\n        # enable for the master/default branch (defaults to true)\n        master: true\n        # enable for pull requests coming from this repo (defaults to true)\n        pullRequests: false\n        # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to true)\n        addComment: false\n`\n      ---\n      \n---\n      # File name: .learn. Content: \n      `Error: This is not a file to be read, but a directory: ./.learn`\n      ---\n      \n---\n      # File name: .vscode. Content: \n      `Error: This is not a file to be read, but a directory: ./.vscode`\n      ---\n      \n---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: index.html. Content: \n      `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">\n\t\t\t<div class=\"postcard-header\">\n\t\t\t\t<h1>My Postcard</h1>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"postcard-body\">\n\t\t\t\t<div class=\"body-left\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLook how awesome! This is a<br />\n\t\t\t\t\t\tpostcard that I created using<br />\n\t\t\t\t\t\tHTML5 and CSS3 during my<br />\n\t\t\t\t\t\t4Geeks Academy Course!\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThis is so cool, can't wait to<br />\n\t\t\t\t\t\tstart new projects!\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"body-right\">\n\t\t\t\t\t<p>Some Name</p>\n\t\t\t\t\t<p>Some Email</p>\n\t\t\t\t\t<p>Some Comment</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"postcard-footer\"></div>\n\t\t</div>\n\t</body>\n</html>\n`\n      ---\n      \n---\n      # File name: learn.json. Content: \n      `{\n    \"title\": \"Build a Digital Postcard with HTML/CSS\",\n    \"slug\": \"exercise-postcard\",\n    \"status\": \"published\",\n    \"grading\": \"incremental\",\n    \"translations\": [\n        \"es\",\n        \"us\"\n    ],\n    \"repository\": \"https://github.com/breatheco-de/exercise-postcard\",\n    \"solution\": \"https://github.com/breatheco-de/exercise-postcard/tree/solution\",\n    \"duration\": 4,\n    \"language\": \"auto\",\n    \"skills\": [\n        \"html-layouts\"\n    ],\n    \"difficulty\": \"beginner\",\n    \"videoSolutions\": true, \n    \"bugsLink\": \"https://github.com/learnpack/learnpack/issues/new\",\n    \"projectType\": \"tutorial\",\n    \"technologies\": [\n        \"html\",\n        \"css\",\n\t\"layouts\"\n    ],\n    \"description\": \"Replicate this postcard with CSS and HTML\",\n    \"preview\": \"https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true\",\n    \"talents\": [\n        {\n            \"badge\": \"identator\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"tag-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"path-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"select-everything\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"be-dry\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"abc\",\n            \"points\": 10\n        }\n    ],\n    \"editor\": {\n        \"version\": \"4.0.0\"\n    },\n\t\"video\": {\n\t\t\"intro\": {\n\t\t\t\"en\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\",\n\t\t\t\"es\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\"\n\t\t}\n    }\n}\n`\n      ---\n      \n---\n      # File name: styles.css. Content: \n      `body {\n\tbackground: black;\n}\n* {\n\tborder: 1px dashed red;\n\tmin-height: 10px;\n}\n.postcard {\n\tbackground: white;\n\twidth: 400px;\n\theight: 300px;\n\tmargin: auto;\n}\n.postcard-header {\n\tdisplay: flex;\n}\n.postcard-header img {\n\theight: 38px;\n\twidth: 38px;\n\tmargin-left: auto;\n}\n.postcard-header h1 {\n\twidth: 400px;\n\tmargin-right: auto;\n\tmargin-top: auto;\n}\n.postcard-body {\n\tdisplay: flex;\n}\n.body-left p:first-child {\n\tmargin-top: 0px;\n\tmargin-right: auto;\n}\n\n.body-left,\n.body-right {\n\tpadding: 10px;\n}\ninput {\n\tborder: x;\n\tborder-bottom: x;\n}\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # Welcome!\n\nWelcome to your Digital Postcard Project üññüßë‚Äçüíª\n\n## üí¨ Fundamentals:\n\nWe have prepared a series of exercises where you will practice everything you have learned so far about HTML and CSS.\n\n1. Create a basic `HTML` structure.\n\n2. Use previously seen tags from scratch.\n\n3. Connect stylesheets.\n\n4. Apply different styles with `CSS` to spice up your project.\n\n5. Manage `<divs>`.\n\n## Useful Readings:\n\n+ [https://www.w3schools.com/TAgs/default.asp](https://www.w3schools.com/TAgs/default.asp)\n\n+ [https://www.w3schools.com/html/html_css.asp](https://www.w3schools.com/html/html_css.asp)\n\n## Useful Video:\n\n+ [https://youtu.be/rvVPyewhFSU](https://youtu.be/rvVPyewhFSU)\n\n## Contributors:\n\nThanks to these wonderful people ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n1. [Alejandro Sanchez (alesanchezr)](https://github.com/alesanchezr), contribution: (coder) :computer: (idea) ü§î, (build-tests) :warning:, (pull-request-review) :eyes: (build-tutorial) :white_check_mark: (documentation) :book:\n\n2. [Paolo Lucano (plucodev)](https://github.com/plucodev), contribution: (coder), (build-tests) :warning:\n\n3. [Marco G√≥mez (marcogonzalo)](https://github.com/marcogonzalo), contribution: (translator) :earth_africa:\n\nThis project follows these specifications: [all-contributors](https://github.com/kentcdodds/all-contributors)\n\nContributions of any kind are welcome!\n\n> üîπ We built the exercises incrementally, you should feel the progress little by little, and hopefully, the difficulty raising between exercises will never be too big to get you frustrated.\n\nNote: Don't get frustrated! Ask any question in the #public_support channel or by private message following [these steps](https://content.breatheco.de/es/how-to/ask). \n\n‚û°Ô∏è Click the `next` button on the top of these instructions to begin with the first exercise...\n\n\n\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1727301269537,"ai_response":"Great question! There are several CSS properties that can help you control the spacing between elements. Here are some of the most commonly used ones:\n\n### 1. **Margin**:\n- **Purpose**: Adds space outside the border of an element.\n- **Usage**: `margin: 10px;` or `margin-top: 10px; margin-right: 5px; margin-bottom: 15px; margin-left: 20px;`\n- **Example**:\n    ```css\n    .example {\n        margin: 20px;\n    }\n    ```\n\n### 2. **Padding**:\n- **Purpose**: Adds space inside the border of an element, between the border and the content.\n- **Usage**: `padding: 10px;` or `padding-top: 10px; padding-right: 5px; padding-bottom: 15px; padding-left: 20px;`\n- **Example**:\n    ```css\n    .example {\n        padding: 20px;\n    }\n    ```\n\n### 3. **Flexbox Properties**:\n- **Purpose**: Aligns and distributes space among items in a container.\n- **Usage**: `display: flex;`, `justify-content: space-between;`, `align-items: center;`\n- **Example**:\n    ```css\n    .container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    ```\n\n### 4. **Grid Properties**:\n- **Purpose**: Creates a grid layout with rows and columns.\n- **Usage**: `display: grid;`, `grid-gap: 10px;`\n- **Example**:\n    ```css\n    .grid-container {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        grid-gap: 10px;\n    }\n    ```\n\n### 5. **Line-Height**:\n- **Purpose**: Controls the space between lines of text.\n- **Usage**: `line-height: 1.5;`\n- **Example**:\n    ```css\n    .text {\n        line-height: 1.5;\n    }\n    ```\n\n### 6. **Width and Height**:\n- **Purpose**: Sets the width and height of an element, which can indirectly control spacing.\n- **Usage**: `width: 100px;`, `height: 50px;`\n- **Example**:\n    ```css\n    .box {\n        width: 100px;\n        height: 50px;\n    }\n    ```\n\n### Reflective Questions:\n- How can you use `margin` and `padding` together to create a balanced layout?\n- What are the differences between `justify-content` and `align-items` in flexbox?\n- How does `grid-gap` differ from `margin` and `padding`?\n\n### Next Steps:\n- Experiment with these properties in your `styles.css` file to see how they affect the layout of your postcard.\n- Try adjusting the margins and paddings of different elements to achieve the desired spacing.\n\nFeel free to share any specific issues you encounter or any part of your code that you're unsure about!"}],"compilations":[],"tests":[],"is_testeable":false},{"slug":"01-design","position":1,"files":[{"path":".learn/exercises/01-design/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/01-design/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1727220642514,"completed_at":1727220771455},{"slug":"02-create-index","position":2,"files":[{"path":".learn/exercises/02-create-index/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/02-create-index/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/02-create-index/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1727220910823,"student_message":"how do i create a new file for idex.html\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `02` Create Index\n\nAll websites in the world must start with a file called `index.html`, when you manually create it, the computer will recognize it as the `entry point` of your application.\n\n## üìù Instructions:\n\n1. Please create a file called `index.html` on the root of the project.\n\n## üí° Hint:\n\n+ Be very careful because the name of the file has to be exact.\n\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs:   ‚óè Make sure you have your index.html\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      3 | test(\"Make sure you have your index.html\", function(){\n      4 |     const indexExists = fs.existsSync(`./index.html`);\n    > 5 |     expect(indexExists).toBe(true);\n        |                         ^\n      6 | })\n\n      at Object.toBe (.learn/exercises/02-create-index/test.js:5:25)\n,\n\n   undefined \n\n     x (fail) 0. Make sure you have your index.html \n\n","ending_at":1727220916381,"ai_response":"Creating a new file named `index.html` is a straightforward process. Here are the steps you can follow:\n\n1. **Using a Code Editor (like VSCode, Sublime Text, etc.):**\n   - Open your code editor.\n   - Navigate to the root directory of your project.\n   - Right-click in the file explorer area and select \"New File\" or use the shortcut (usually `Ctrl+N` or `Cmd+N`).\n   - Name the new file `index.html` and save it.\n\n2. **Using Command Line:**\n   - Open your terminal or command prompt.\n   - Navigate to the root directory of your project using the `cd` command.\n   - Type the following command and press Enter:\n     ```bash\n     touch index.html\n     ```\n   - This will create a new file named `index.html` in the current directory.\n\nOnce you have created the `index.html` file, you can start adding your HTML content to it. \n\nWould you like to proceed with one of these methods, or do you need further assistance with a specific step?"}],"compilations":[],"tests":[{"starting_at":1727220907688,"ended_at":1727220909485,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bRtbMjJtCgogICAgG1sybWV4cGVjdCgbWzIybRtbMzFtcmVjZWl2ZWQbWzM5bRtbMm0pLhtbMjJtdG9CZRtbMm0oG1syMm0bWzMybWV4cGVjdGVkG1szOW0bWzJtKSAvLyBPYmplY3QuaXMgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybXRydWUbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtZmFsc2UbWzM5bQobWzJtG1syMm0KG1sybSAgICAgIDMgfCB0ZXN0KCJNYWtlIHN1cmUgeW91IGhhdmUgeW91ciBpbmRleC5odG1sIiwgZnVuY3Rpb24oKXsbWzIybQobWzJtICAgICAgNCB8ICAgICBjb25zdCBpbmRleEV4aXN0cyA9IGZzLmV4aXN0c1N5bmMoYC4vaW5kZXguaHRtbGApOxtbMjJtChtbMm0gICAgPiA1IHwgICAgIGV4cGVjdChpbmRleEV4aXN0cykudG9CZSh0cnVlKTsbWzIybQobWzJtICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgNiB8IH0pG1syMm0KG1sybRtbMjJtChtbMm0gICAgICAbWzJtYXQgT2JqZWN0LnRvQmUgKBtbMjJtG1sybRtbMG0bWzM2bS5sZWFybi9leGVyY2lzZXMvMDItY3JlYXRlLWluZGV4L3Rlc3QuanMbWzM5bRtbMG0bWzJtOjU6MjUpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21NYWtlIHN1cmUgeW91IGhhdmUgeW91ciBpbmRleC5odG1sG1szOW0gCgo=","exit_code":1},{"starting_at":1727221191813,"ended_at":1727221192803,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIGhhdmUgcGFzc2VkG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bRtbMjJtCgogICAgG1sybWV4cGVjdCgbWzIybRtbMzFtcmVjZWl2ZWQbWzM5bRtbMm0pLhtbMjJtdG9CZRtbMm0oG1syMm0bWzMybWV4cGVjdGVkG1szOW0bWzJtKSAvLyBPYmplY3QuaXMgZXF1YWxpdHkbWzIybQoKICAgIEV4cGVjdGVkOiAbWzMybXRydWUbWzM5bQogICAgUmVjZWl2ZWQ6IBtbMzFtZmFsc2UbWzM5bQobWzJtG1syMm0KG1sybSAgICAgIDMgfCB0ZXN0KCJNYWtlIHN1cmUgeW91IGhhdmUgeW91ciBpbmRleC5odG1sIiwgZnVuY3Rpb24oKXsbWzIybQobWzJtICAgICAgNCB8ICAgICBjb25zdCBpbmRleEV4aXN0cyA9IGZzLmV4aXN0c1N5bmMoYC4vaW5kZXguaHRtbGApOxtbMjJtChtbMm0gICAgPiA1IHwgICAgIGV4cGVjdChpbmRleEV4aXN0cykudG9CZSh0cnVlKTsbWzIybQobWzJtICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgNiB8IH0pG1syMm0KG1sybRtbMjJtChtbMm0gICAgICAbWzJtYXQgT2JqZWN0LnRvQmUgKBtbMjJtG1sybRtbMG0bWzM2bS5sZWFybi9leGVyY2lzZXMvMDItY3JlYXRlLWluZGV4L3Rlc3QuanMbWzM5bRtbMG0bWzJtOjU6MjUpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMC4gG1szN21NYWtlIHN1cmUgeW91IGhhdmUgeW91ciBpbmRleC5odG1sG1szOW0gCgo=","exit_code":1},{"starting_at":1727221364206,"ended_at":1727221365683,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727220778800,"completed_at":1727221365683},{"slug":"03-add-first-html","position":3,"files":[{"path":".learn/exercises/03-add-first-html/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/03-add-first-html/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1727221371716,"completed_at":1727221452384},{"slug":"04-build-the-website","position":4,"files":[{"path":".learn/exercises/04-build-the-website/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/04-build-the-website/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727221463527,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-24T23:44:23.527Z","exit_code":0},{"starting_at":1727221492085,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-24T23:44:52.085Z","exit_code":0},{"starting_at":1727221515846,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-24T23:45:15.846Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1727221452384,"completed_at":1727221542034},{"slug":"05-how-to-start","position":5,"files":[{"path":".learn/exercises/05-how-to-start/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/05-how-to-start/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[],"is_testeable":false,"opened_at":1727221542034,"completed_at":1727221612939},{"slug":"06-lets-start-building","position":6,"files":[{"path":".learn/exercises/06-lets-start-building/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/06-lets-start-building/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/06-lets-start-building/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1727221799648,"ended_at":1727221801099,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727221612939,"completed_at":1727221801099},{"slug":"07-the-first-div","position":7,"files":[{"path":".learn/exercises/07-the-first-div/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/07-the-first-div/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/07-the-first-div/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727221910666,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-24T23:51:50.666Z","exit_code":0}],"tests":[{"starting_at":1727221905401,"ended_at":1727221906809,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727221804458,"completed_at":1727221906809},{"slug":"08-adding-styles","position":8,"files":[{"path":".learn/exercises/08-adding-styles/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/08-adding-styles/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/08-adding-styles/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1727222042644,"student_message":"how to start a css file\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\nconst path = require(\"path\");\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"The name of the file is styles.css in plural\", function(){\n    const indexExists = fs.existsSync(`./style.css`);\n    expect(indexExists).not.toBe(true);\n})\n\ntest(\"Make sure your styles.css contains the expected style\", function(){\n    const content = fs.readFileSync(\"./styles.css\", 'utf8')\n    const expected = /body\\s*{\\s*background\\s*:\\s*black\\s*;\\s*}/;\n    expect(content).toEqual(expect.stringMatching(expected));\n})`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `08` Adding styles\n\nIf you `build` your website right now, you will see that it only says \"Hello\". That is because the `<div>` we just added is invisible; let's change that.\n\nTo start bringing your website to life, we must begin by adding a `styles.css` file. This will contain all our website styling code.\n\n## üìù Instructions:\n\n1. Create a `styles.css` file on the root of your project and add the following content to it:\n\n```css\nbody{\n    background: black;\n}\n```\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs:   ‚óè Make sure you created the styles.css file\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n       9 | test(\"Make sure you created the styles.css file\", function(){\n      10 |     const indexExists = fs.existsSync(`./styles.css`);\n    > 11 |     expect(indexExists).toBe(true);\n         |                         ^\n      12 | })\n      13 |\n      14 | test(\"The name of the file is styles.css in plural\", function(){\n\n      at Object.toBe (.learn/exercises/08-adding-styles/test.js:11:25)\n\n  ‚óè Make sure your styles.css contains the expected style\n\n    ENOENT: no such file or directory, open './styles.css'\n\n      18 |\n      19 | test(\"Make sure your styles.css contains the expected style\", function(){\n    > 20 |     const content = fs.readFileSync(\"./styles.css\", 'utf8')\n         |                        ^\n      21 |     const expected = /body\\s*{\\s*background\\s*:\\s*black\\s*;\\s*}/;\n      22 |     expect(content).toEqual(expect.stringMatching(expected));\n      23 | })\n\n      at Object.readFileSync (.learn/exercises/08-adding-styles/test.js:20:24)\n,\n\n   undefined \n\n     ‚úì (done) 0. Make sure you have your index.html\n     x (fail) 1. Make sure you created the styles.css file\n     ‚úì (done) 2. The name of the file is styles.css in plural\n     x (fail) 3. Make sure your styles.css contains the expected style \n\n","ending_at":1727222049626,"ai_response":"To start a CSS file, you need to follow these steps:\n\n1. **Create the CSS File:**\n   - In the root directory of your project, create a new file named `styles.css`.\n\n2. **Add Basic Styles:**\n   - Open the `styles.css` file and add your CSS code. For example, to set the background color of the body to black, you can add the following code:\n\n   ```css\n   body {\n       background: black;\n   }\n   ```\n\n3. **Link the CSS File to Your HTML:**\n   - Open your `index.html` file and add a `<link>` tag inside the `<head>` section to link your CSS file. It should look something like this:\n\n   ```html\n   <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <title>Postcard</title>\n       <link rel=\"stylesheet\" href=\"styles.css\">\n   </head>\n   <body>\n       <!-- Your content here -->\n   </body>\n   </html>\n   ```\n\nBy following these steps, you will have created a CSS file and linked it to your HTML file. This will allow you to style your webpage using the CSS rules defined in `styles.css`.\n\nWould you like to try creating the `styles.css` file and adding the basic styles? If you encounter any issues, feel free to share what you've done so far."},{"starting_at":1727222555964,"student_message":"how do i get to the css file\n","context":"---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\nconst path = require(\"path\");\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"The name of the file is styles.css in plural\", function(){\n    const indexExists = fs.existsSync(`./style.css`);\n    expect(indexExists).not.toBe(true);\n})\n\ntest(\"Make sure your styles.css contains the expected style\", function(){\n    const content = fs.readFileSync(\"./styles.css\", 'utf8')\n    const expected = /body\\s*{\\s*background\\s*:\\s*black\\s*;\\s*}/;\n    expect(content).toEqual(expect.stringMatching(expected));\n})`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `08` Adding styles\n\nIf you `build` your website right now, you will see that it only says \"Hello\". That is because the `<div>` we just added is invisible; let's change that.\n\nTo start bringing your website to life, we must begin by adding a `styles.css` file. This will contain all our website styling code.\n\n## üìù Instructions:\n\n1. Create a `styles.css` file on the root of your project and add the following content to it:\n\n```css\nbody{\n    background: black;\n}\n```\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1727222563549,"ai_response":"To access and edit the CSS file, you need to follow these steps:\n\n1. **Open Your Project Directory:**\n   - Navigate to the root directory of your project where your `index.html` file is located.\n\n2. **Create the CSS File (if not already created):**\n   - If you haven't created the `styles.css` file yet, create a new file in the root directory of your project and name it `styles.css`.\n\n3. **Open the CSS File:**\n   - Open the `styles.css` file using your code editor (e.g., VSCode, Sublime Text, etc.).\n\n4. **Add Your CSS Code:**\n   - Once the file is open, you can start adding your CSS code. For example, to set the background color of the body to black, you can add the following code:\n\n   ```css\n   body {\n       background: black;\n   }\n   ```\n\n5. **Link the CSS File to Your HTML:**\n   - Ensure that your `index.html` file has a link to the `styles.css` file. Open your `index.html` file and add the following line inside the `<head>` section:\n\n   ```html\n   <link rel=\"stylesheet\" href=\"styles.css\">\n   ```\n\nWould you like to try these steps and let me know if you encounter any issues? If you have already created the `styles.css` file, you can directly open it and start adding your styles."}],"compilations":[{"starting_at":1727222293223,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-24T23:58:13.223Z","exit_code":0},{"starting_at":1727222978518,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:09:38.518Z","exit_code":0}],"tests":[{"starting_at":1727222040090,"ended_at":1727222041398,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbU1ha2Ugc3VyZSB5b3UgY3JlYXRlZCB0aGUgc3R5bGVzLmNzcyBmaWxlG1szOW0bWzIybQoKICAgIBtbMm1leHBlY3QoG1syMm0bWzMxbXJlY2VpdmVkG1szOW0bWzJtKS4bWzIybXRvQmUbWzJtKBtbMjJtG1szMm1leHBlY3RlZBtbMzltG1sybSkgLy8gT2JqZWN0LmlzIGVxdWFsaXR5G1syMm0KCiAgICBFeHBlY3RlZDogG1szMm10cnVlG1szOW0KICAgIFJlY2VpdmVkOiAbWzMxbWZhbHNlG1szOW0KG1sybRtbMjJtChtbMm0gICAgICAgOSB8IHRlc3QoIk1ha2Ugc3VyZSB5b3UgY3JlYXRlZCB0aGUgc3R5bGVzLmNzcyBmaWxlIiwgZnVuY3Rpb24oKXsbWzIybQobWzJtICAgICAgMTAgfCAgICAgY29uc3QgaW5kZXhFeGlzdHMgPSBmcy5leGlzdHNTeW5jKGAuL3N0eWxlcy5jc3NgKTsbWzIybQobWzJtICAgID4gMTEgfCAgICAgZXhwZWN0KGluZGV4RXhpc3RzKS50b0JlKHRydWUpOxtbMjJtChtbMm0gICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgIF4bWzIybQobWzJtICAgICAgMTIgfCB9KRtbMjJtChtbMm0gICAgICAxMyB8G1syMm0KG1sybSAgICAgIDE0IHwgdGVzdCgiVGhlIG5hbWUgb2YgdGhlIGZpbGUgaXMgc3R5bGVzLmNzcyBpbiBwbHVyYWwiLCBmdW5jdGlvbigpextbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50b0JlICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzA4LWFkZGluZy1zdHlsZXMvdGVzdC5qcxtbMzltG1swbRtbMm06MTE6MjUpG1syMm0bWzJtG1syMm0KChtbMW0bWzMxbSAgG1sxbeKXjyAbWzIybRtbMW1NYWtlIHN1cmUgeW91ciBzdHlsZXMuY3NzIGNvbnRhaW5zIHRoZSBleHBlY3RlZCBzdHlsZRtbMzltG1syMm0KCiAgICBFTk9FTlQ6IG5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnksIG9wZW4gJy4vc3R5bGVzLmNzcycKG1sybRtbMjJtChtbMm0gICAgICAxOCB8G1syMm0KG1sybSAgICAgIDE5IHwgdGVzdCgiTWFrZSBzdXJlIHlvdXIgc3R5bGVzLmNzcyBjb250YWlucyB0aGUgZXhwZWN0ZWQgc3R5bGUiLCBmdW5jdGlvbigpextbMjJtChtbMm0gICAgPiAyMCB8ICAgICBjb25zdCBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKCIuL3N0eWxlcy5jc3MiLCAndXRmOCcpG1syMm0KG1sybSAgICAgICAgIHwgICAgICAgICAgICAgICAgICAgICAgICBeG1syMm0KG1sybSAgICAgIDIxIHwgICAgIGNvbnN0IGV4cGVjdGVkID0gL2JvZHlccyp7XHMqYmFja2dyb3VuZFxzKjpccypibGFja1xzKjtccyp9LzsbWzIybQobWzJtICAgICAgMjIgfCAgICAgZXhwZWN0KGNvbnRlbnQpLnRvRXF1YWwoZXhwZWN0LnN0cmluZ01hdGNoaW5nKGV4cGVjdGVkKSk7G1syMm0KG1sybSAgICAgIDIzIHwgfSkbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QucmVhZEZpbGVTeW5jICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzA4LWFkZGluZy1zdHlsZXMvdGVzdC5qcxtbMzltG1swbRtbMm06MjA6MjQpG1syMm0bWzJtG1syMm0KLAoKICAgdW5kZWZpbmVkIAoKICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAwLiAbWzM3bU1ha2Ugc3VyZSB5b3UgaGF2ZSB5b3VyIGluZGV4Lmh0bWwbWzM5bQogICAgIBtbMzFtG1sxbXggKGZhaWwpG1syMm0bWzM5bSAxLiAbWzM3bU1ha2Ugc3VyZSB5b3UgY3JlYXRlZCB0aGUgc3R5bGVzLmNzcyBmaWxlG1szOW0KICAgICAbWzMybRtbMW3inJMgKGRvbmUpG1syMm0bWzM5bSAyLiAbWzM3bVRoZSBuYW1lIG9mIHRoZSBmaWxlIGlzIHN0eWxlcy5jc3MgaW4gcGx1cmFsG1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMy4gG1szN21NYWtlIHN1cmUgeW91ciBzdHlsZXMuY3NzIGNvbnRhaW5zIHRoZSBleHBlY3RlZCBzdHlsZRtbMzltIAoK","exit_code":1},{"starting_at":1727222992012,"ended_at":1727222993235,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727221915525,"completed_at":1727222993235},{"slug":"08.1-red-borders","position":9,"files":[{"path":".learn/exercises/08.1-red-borders/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/08.1-red-borders/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/08.1-red-borders/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727223146812,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:12:26.812Z","exit_code":0}],"tests":[{"starting_at":1727223154442,"ended_at":1727223155747,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727222995117,"completed_at":1727223155747},{"slug":"09-connecting-stylesheet","position":10,"files":[{"path":".learn/exercises/09-connecting-stylesheet/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/09-connecting-stylesheet/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/09-connecting-stylesheet/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[],"tests":[{"starting_at":1727223192958,"ended_at":1727223194365,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727223169659,"completed_at":1727223194365},{"slug":"10-center-postcard","position":11,"files":[{"path":".learn/exercises/10-center-postcard/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/10-center-postcard/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/10-center-postcard/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727223344503,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:15:44.503Z","exit_code":0}],"tests":[{"starting_at":1727223371498,"ended_at":1727223373064,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727223195925,"completed_at":1727223373064},{"slug":"11-postcard-divisions","position":12,"files":[{"path":".learn/exercises/11-postcard-divisions/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11-postcard-divisions/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11-postcard-divisions/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1727223496237,"student_message":"Im stuck\n","context":"---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure your index.html contains the <link> tag\", function(){\n    const content = fs.readFileSync(\"./index.html\", 'utf8')\n    document.documentElement.innerHTML = content.toString();\n    const linkTag = _document.querySelector(\"link\")\n    expect(linkTag).not.toBe(null);\n})\n\ntest(\"Create a div with class postcard-header as child of .postcard\", function(){\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-header')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create a div with class postcard-body as child of .postcard\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-body')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create a div with class postcard-footer as child of .postcard\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-footer')\n    expect(e).toBeTruthy();\n})\n`\n      ---\n      \n---\n      # File name: .devcontainer. Content: \n      `Error: This is not a file to be read, but a directory: ./.devcontainer`\n      ---\n      \n---\n      # File name: .exercise. Content: \n      `Error: This is not a file to be read, but a directory: ./.exercise`\n      ---\n      \n---\n      # File name: .git. Content: \n      `Error: This is not a file to be read, but a directory: ./.git`\n      ---\n      \n---\n      # File name: .github. Content: \n      `Error: This is not a file to be read, but a directory: ./.github`\n      ---\n      \n---\n      # File name: .gitignore. Content: \n      `.theia\n\n.learn/_app\n.learn/.session\n.learn/dist\n.learn/reports\napp.tar.gz\nconfig.json\nvscode_queue.json\n!.vscode`\n      ---\n      \n---\n      # File name: .gitpod.Dockerfile. Content: \n      `FROM gitpod/workspace-full\n\nUSER gitpod\n\nRUN npm i jest@29.7.0 jest-environment-jsdom@29.7.0 -g\nRUN npm i @learnpack/learnpack@4.0.8 -g && learnpack plugins:install @learnpack/node@1.1.12 && learnpack plugins:install @learnpack/html@1.1.7\n`\n      ---\n      \n---\n      # File name: .gitpod.yml. Content: \n      `image:\n  file: .gitpod.Dockerfile\n\n# List the ports you want to expose and what to do when they are served. See https://www.gitpod.io/docs/config-ports/\nports:\n  - port: 3000\n    onOpen: ignore\n\nvscode:\n  extensions:\n    - learn-pack.learnpack-vscode\n    \ngithub:\n    prebuilds:\n        # enable for the master/default branch (defaults to true)\n        master: true\n        # enable for pull requests coming from this repo (defaults to true)\n        pullRequests: false\n        # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to true)\n        addComment: false\n`\n      ---\n      \n---\n      # File name: .learn. Content: \n      `Error: This is not a file to be read, but a directory: ./.learn`\n      ---\n      \n---\n      # File name: .vscode. Content: \n      `Error: This is not a file to be read, but a directory: ./.vscode`\n      ---\n      \n---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: index.html. Content: \n      `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">Hello</div>\n\t</body>\n</html>\n`\n      ---\n      \n---\n      # File name: learn.json. Content: \n      `{\n    \"title\": \"Build a Digital Postcard with HTML/CSS\",\n    \"slug\": \"exercise-postcard\",\n    \"status\": \"published\",\n    \"grading\": \"incremental\",\n    \"translations\": [\n        \"es\",\n        \"us\"\n    ],\n    \"repository\": \"https://github.com/breatheco-de/exercise-postcard\",\n    \"solution\": \"https://github.com/breatheco-de/exercise-postcard/tree/solution\",\n    \"duration\": 4,\n    \"language\": \"auto\",\n    \"skills\": [\n        \"html-layouts\"\n    ],\n    \"difficulty\": \"beginner\",\n    \"videoSolutions\": true, \n    \"bugsLink\": \"https://github.com/learnpack/learnpack/issues/new\",\n    \"projectType\": \"tutorial\",\n    \"technologies\": [\n        \"html\",\n        \"css\",\n\t\"layouts\"\n    ],\n    \"description\": \"Replicate this postcard with CSS and HTML\",\n    \"preview\": \"https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true\",\n    \"talents\": [\n        {\n            \"badge\": \"identator\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"tag-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"path-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"select-everything\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"be-dry\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"abc\",\n            \"points\": 10\n        }\n    ],\n    \"editor\": {\n        \"version\": \"4.0.0\"\n    },\n\t\"video\": {\n\t\t\"intro\": {\n\t\t\t\"en\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\",\n\t\t\t\"es\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\"\n\t\t}\n    }\n}\n`\n      ---\n      \n---\n      # File name: styles.css. Content: \n      `body {\n\tbackground: black;\n}\n* {\n\tborder: 1px dashed red;\n\tmin-height: 10px;\n}\n.postcard {\n\tbackground: white;\n\twidth: 400px;\n\theight: 300px;\n\tmargin: auto;\n}\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `11` Postcard Divisions\n\nNow we have to keep building the strategy for our HTML, we have to continue dividing the postcard in pieces to be able to apply styles and control it easily.\n\n![Postcard Divisions](../../assets/11-postcard-divisions.gif?raw=true)\n\n## üìù Instructions:\n\n 1. Inside your `<div class=\"postcard\">` add three additional divs.\n\n```txt\n1. .postcard\n    1.1. .postcard-header\n    1.2. .postcard-body\n    1.3. .postcard-footer\n```\n>Note: All three of them are immediate children.\n\n## üí° Hint:\n\n+ Please make sure the divs have the specified classes, the first of the 3 divs should have the class `postcard-header`, the second one `postcard-body` and the third one `postcard-footer`.\n\n## üîé Important:\n\n+ You don't have to include the dot symbol (`.`) in your class name, you will only use the dots in the CSS.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      \nSome tests didn't passed, these are the tests logs:   ‚óè Create a div with class postcard-header as child of .postcard\n\n    thrown: \"Element with css selector .postcard-header don't exist inside .postcard\"\n\n      21 | })\n      22 |\n    > 23 | test(\"Create a div with class postcard-header as child of .postcard\", function(){\n         | ^\n      24 |     const e=dom.querySelector('.postcard').inside().querySelector('.postcard-header')\n      25 |     expect(e).toBeTruthy();\n      26 | })\n\n      at Object.test (.learn/exercises/11-postcard-divisions/test.js:23:1)\n\n  ‚óè Create a div with class postcard-body as child of .postcard\n\n    thrown: \"Element with css selector .postcard-body don't exist inside .postcard\"\n\n      26 | })\n      27 |\n    > 28 | test(\"Create a div with class postcard-body as child of .postcard\", function(){\n         | ^\n      29 |     dom = fromFile();\n      30 |     const e=dom.querySelector('.postcard').inside().querySelector('.postcard-body')\n      31 |     expect(e).toBeTruthy();\n\n      at Object.test (.learn/exercises/11-postcard-divisions/test.js:28:1)\n\n  ‚óè Create a div with class postcard-footer as child of .postcard\n\n    thrown: \"Element with css selector .postcard-footer don't exist inside .postcard\"\n\n      32 | })\n      33 |\n    > 34 | test(\"Create a div with class postcard-footer as child of .postcard\", function(){\n         | ^\n      35 |     dom = fromFile();\n      36 |     const e=dom.querySelector('.postcard').inside().querySelector('.postcard-footer')\n      37 |     expect(e).toBeTruthy();\n\n      at Object.test (.learn/exercises/11-postcard-divisions/test.js:34:1)\n,\n\n   undefined \n\n     ‚úì (done) 0. Make sure you have your index.html\n     ‚úì (done) 1. Make sure you created the styles.css file\n     ‚úì (done) 2. Make sure your index.html contains the <link> tag\n     x (fail) 3. Create a div with class postcard-header as child of .postcard\n     x (fail) 4. Create a div with class postcard-body as child of .postcard\n     x (fail) 5. Create a div with class postcard-footer as child of .postcard \n\n","ending_at":1727223501557,"ai_response":"Let's break down the task step by step to ensure we understand what needs to be done.\n\nThe instructions ask you to add three `div` elements inside the `div` with the class `postcard`. Each of these new `div` elements should have specific classes: `postcard-header`, `postcard-body`, and `postcard-footer`.\n\nHere's a way to think about it:\n\n1. Imagine your `postcard` div as a container.\n2. Inside this container, you need to create three sections: a header, a body, and a footer.\n\nLet's visualize this structure:\n\n```html\n<div class=\"postcard\">\n    <div class=\"postcard-header\"></div>\n    <div class=\"postcard-body\"></div>\n    <div class=\"postcard-footer\"></div>\n</div>\n```\n\nNow, let's implement this in your `index.html` file. You need to modify the content of the `postcard` div to include these three new divs.\n\nWould you like to try adding these divs to your `index.html` file and then run the tests again?"},{"starting_at":1727223714689,"student_message":"what am i doing wrong?\n","context":"---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"Make sure you have your index.html\", function(){\n    const indexExists = fs.existsSync(`./index.html`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure you created the styles.css file\", function(){\n    const indexExists = fs.existsSync(`./styles.css`);\n    expect(indexExists).toBe(true);\n})\n\ntest(\"Make sure your index.html contains the <link> tag\", function(){\n    const content = fs.readFileSync(\"./index.html\", 'utf8')\n    document.documentElement.innerHTML = content.toString();\n    const linkTag = _document.querySelector(\"link\")\n    expect(linkTag).not.toBe(null);\n})\n\ntest(\"Create a div with class postcard-header as child of .postcard\", function(){\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-header')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create a div with class postcard-body as child of .postcard\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-body')\n    expect(e).toBeTruthy();\n})\n\ntest(\"Create a div with class postcard-footer as child of .postcard\", function(){\n    dom = fromFile();\n    const e=dom.querySelector('.postcard').inside().querySelector('.postcard-footer')\n    expect(e).toBeTruthy();\n})\n`\n      ---\n      \n---\n      # File name: .devcontainer. Content: \n      `Error: This is not a file to be read, but a directory: ./.devcontainer`\n      ---\n      \n---\n      # File name: .exercise. Content: \n      `Error: This is not a file to be read, but a directory: ./.exercise`\n      ---\n      \n---\n      # File name: .git. Content: \n      `Error: This is not a file to be read, but a directory: ./.git`\n      ---\n      \n---\n      # File name: .github. Content: \n      `Error: This is not a file to be read, but a directory: ./.github`\n      ---\n      \n---\n      # File name: .gitignore. Content: \n      `.theia\n\n.learn/_app\n.learn/.session\n.learn/dist\n.learn/reports\napp.tar.gz\nconfig.json\nvscode_queue.json\n!.vscode`\n      ---\n      \n---\n      # File name: .gitpod.Dockerfile. Content: \n      `FROM gitpod/workspace-full\n\nUSER gitpod\n\nRUN npm i jest@29.7.0 jest-environment-jsdom@29.7.0 -g\nRUN npm i @learnpack/learnpack@4.0.8 -g && learnpack plugins:install @learnpack/node@1.1.12 && learnpack plugins:install @learnpack/html@1.1.7\n`\n      ---\n      \n---\n      # File name: .gitpod.yml. Content: \n      `image:\n  file: .gitpod.Dockerfile\n\n# List the ports you want to expose and what to do when they are served. See https://www.gitpod.io/docs/config-ports/\nports:\n  - port: 3000\n    onOpen: ignore\n\nvscode:\n  extensions:\n    - learn-pack.learnpack-vscode\n    \ngithub:\n    prebuilds:\n        # enable for the master/default branch (defaults to true)\n        master: true\n        # enable for pull requests coming from this repo (defaults to true)\n        pullRequests: false\n        # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to true)\n        addComment: false\n`\n      ---\n      \n---\n      # File name: .learn. Content: \n      `Error: This is not a file to be read, but a directory: ./.learn`\n      ---\n      \n---\n      # File name: .vscode. Content: \n      `Error: This is not a file to be read, but a directory: ./.vscode`\n      ---\n      \n---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: index.html. Content: \n      `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">Hello</div>\n        <div class=\"postcard-header\"></div>\n        <div class=\"postcard-body\"></div>\n        <div class=\"postcard-footer\"></div>\n\t</body>\n</html>\n`\n      ---\n      \n---\n      # File name: learn.json. Content: \n      `{\n    \"title\": \"Build a Digital Postcard with HTML/CSS\",\n    \"slug\": \"exercise-postcard\",\n    \"status\": \"published\",\n    \"grading\": \"incremental\",\n    \"translations\": [\n        \"es\",\n        \"us\"\n    ],\n    \"repository\": \"https://github.com/breatheco-de/exercise-postcard\",\n    \"solution\": \"https://github.com/breatheco-de/exercise-postcard/tree/solution\",\n    \"duration\": 4,\n    \"language\": \"auto\",\n    \"skills\": [\n        \"html-layouts\"\n    ],\n    \"difficulty\": \"beginner\",\n    \"videoSolutions\": true, \n    \"bugsLink\": \"https://github.com/learnpack/learnpack/issues/new\",\n    \"projectType\": \"tutorial\",\n    \"technologies\": [\n        \"html\",\n        \"css\",\n\t\"layouts\"\n    ],\n    \"description\": \"Replicate this postcard with CSS and HTML\",\n    \"preview\": \"https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true\",\n    \"talents\": [\n        {\n            \"badge\": \"identator\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"tag-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"path-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"select-everything\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"be-dry\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"abc\",\n            \"points\": 10\n        }\n    ],\n    \"editor\": {\n        \"version\": \"4.0.0\"\n    },\n\t\"video\": {\n\t\t\"intro\": {\n\t\t\t\"en\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\",\n\t\t\t\"es\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\"\n\t\t}\n    }\n}\n`\n      ---\n      \n---\n      # File name: styles.css. Content: \n      `body {\n\tbackground: black;\n}\n* {\n\tborder: 1px dashed red;\n\tmin-height: 10px;\n}\n.postcard {\n\tbackground: white;\n\twidth: 400px;\n\theight: 300px;\n\tmargin: auto;\n}\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `11` Postcard Divisions\n\nNow we have to keep building the strategy for our HTML, we have to continue dividing the postcard in pieces to be able to apply styles and control it easily.\n\n![Postcard Divisions](../../assets/11-postcard-divisions.gif?raw=true)\n\n## üìù Instructions:\n\n 1. Inside your `<div class=\"postcard\">` add three additional divs.\n\n```txt\n1. .postcard\n    1.1. .postcard-header\n    1.2. .postcard-body\n    1.3. .postcard-footer\n```\n>Note: All three of them are immediate children.\n\n## üí° Hint:\n\n+ Please make sure the divs have the specified classes, the first of the 3 divs should have the class `postcard-header`, the second one `postcard-body` and the third one `postcard-footer`.\n\n## üîé Important:\n\n+ You don't have to include the dot symbol (`.`) in your class name, you will only use the dots in the CSS.\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      ","ending_at":1727223720891,"ai_response":"Let's take a closer look at your `index.html` file. You have already added the `div` elements with the correct classes inside the `postcard` div. However, it seems like the placement of these `div` elements might be causing the issue.\n\nCurrently, your `index.html` looks like this:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">Hello</div>\n        <div class=\"postcard-header\"></div>\n        <div class=\"postcard-body\"></div>\n        <div class=\"postcard-footer\"></div>\n\t</body>\n</html>\n```\n\nNotice that the `postcard-header`, `postcard-body`, and `postcard-footer` divs are outside the `postcard` div. They need to be inside the `postcard` div. Let's correct this:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">\n\t\t\t<div class=\"postcard-header\"></div>\n\t\t\t<div class=\"postcard-body\"></div>\n\t\t\t<div class=\"postcard-footer\"></div>\n\t\t</div>\n\t</body>\n</html>\n```\n\nWould you like to update your `index.html` file with this structure and then run the tests again?"}],"compilations":[],"tests":[{"starting_at":1727223493845,"ended_at":1727223495276,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbUNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWhlYWRlciBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1oZWFkZXIgZG9uJ3QgZXhpc3QgaW5zaWRlIC5wb3N0Y2FyZBtbMG0iChtbMm0bWzIybQobWzJtICAgICAgMjEgfCB9KRtbMjJtChtbMm0gICAgICAyMiB8G1syMm0KG1sybSAgICA+IDIzIHwgdGVzdCgiQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtaGVhZGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZCIsIGZ1bmN0aW9uKCl7G1syMm0KG1sybSAgICAgICAgIHwgXhtbMjJtChtbMm0gICAgICAyNCB8ICAgICBjb25zdCBlPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQnKS5pbnNpZGUoKS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtaGVhZGVyJykbWzIybQobWzJtICAgICAgMjUgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtICAgICAgMjYgfCB9KRtbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50ZXN0ICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzExLXBvc3RjYXJkLWRpdmlzaW9ucy90ZXN0LmpzG1szOW0bWzBtG1sybToyMzoxKRtbMjJtG1sybRtbMjJtCgobWzFtG1szMW0gIBtbMW3il48gG1syMm0bWzFtQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtYm9keSBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1ib2R5IGRvbid0IGV4aXN0IGluc2lkZSAucG9zdGNhcmQbWzBtIgobWzJtG1syMm0KG1sybSAgICAgIDI2IHwgfSkbWzIybQobWzJtICAgICAgMjcgfBtbMjJtChtbMm0gICAgPiAyOCB8IHRlc3QoIkNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWJvZHkgYXMgY2hpbGQgb2YgLnBvc3RjYXJkIiwgZnVuY3Rpb24oKXsbWzIybQobWzJtICAgICAgICAgfCBeG1syMm0KG1sybSAgICAgIDI5IHwgICAgIGRvbSA9IGZyb21GaWxlKCk7G1syMm0KG1sybSAgICAgIDMwIHwgICAgIGNvbnN0IGU9ZG9tLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0Y2FyZCcpLmluc2lkZSgpLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0Y2FyZC1ib2R5JykbWzIybQobWzJtICAgICAgMzEgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudGVzdCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS1wb3N0Y2FyZC1kaXZpc2lvbnMvdGVzdC5qcxtbMzltG1swbRtbMm06Mjg6MSkbWzIybRtbMm0bWzIybQoKG1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbUNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWZvb3RlciBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1mb290ZXIgZG9uJ3QgZXhpc3QgaW5zaWRlIC5wb3N0Y2FyZBtbMG0iChtbMm0bWzIybQobWzJtICAgICAgMzIgfCB9KRtbMjJtChtbMm0gICAgICAzMyB8G1syMm0KG1sybSAgICA+IDM0IHwgdGVzdCgiQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtZm9vdGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZCIsIGZ1bmN0aW9uKCl7G1syMm0KG1sybSAgICAgICAgIHwgXhtbMjJtChtbMm0gICAgICAzNSB8ICAgICBkb20gPSBmcm9tRmlsZSgpOxtbMjJtChtbMm0gICAgICAzNiB8ICAgICBjb25zdCBlPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQnKS5pbnNpZGUoKS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtZm9vdGVyJykbWzIybQobWzJtICAgICAgMzcgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudGVzdCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS1wb3N0Y2FyZC1kaXZpc2lvbnMvdGVzdC5qcxtbMzltG1swbRtbMm06MzQ6MSkbWzIybRtbMm0bWzIybQosCgogICB1bmRlZmluZWQgCgogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDAuIBtbMzdtTWFrZSBzdXJlIHlvdSBoYXZlIHlvdXIgaW5kZXguaHRtbBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMS4gG1szN21NYWtlIHN1cmUgeW91IGNyZWF0ZWQgdGhlIHN0eWxlcy5jc3MgZmlsZRtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMi4gG1szN21NYWtlIHN1cmUgeW91ciBpbmRleC5odG1sIGNvbnRhaW5zIHRoZSA8bGluaz4gdGFnG1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMy4gG1szN21DcmVhdGUgYSBkaXYgd2l0aCBjbGFzcyBwb3N0Y2FyZC1oZWFkZXIgYXMgY2hpbGQgb2YgLnBvc3RjYXJkG1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gNC4gG1szN21DcmVhdGUgYSBkaXYgd2l0aCBjbGFzcyBwb3N0Y2FyZC1ib2R5IGFzIGNoaWxkIG9mIC5wb3N0Y2FyZBtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDUuIBtbMzdtQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtZm9vdGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZBtbMzltIAoK","exit_code":1},{"starting_at":1727223657604,"ended_at":1727223658937,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"G1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbUNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWhlYWRlciBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1oZWFkZXIgZG9uJ3QgZXhpc3QgaW5zaWRlIC5wb3N0Y2FyZBtbMG0iChtbMm0bWzIybQobWzJtICAgICAgMjEgfCB9KRtbMjJtChtbMm0gICAgICAyMiB8G1syMm0KG1sybSAgICA+IDIzIHwgdGVzdCgiQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtaGVhZGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZCIsIGZ1bmN0aW9uKCl7G1syMm0KG1sybSAgICAgICAgIHwgXhtbMjJtChtbMm0gICAgICAyNCB8ICAgICBjb25zdCBlPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQnKS5pbnNpZGUoKS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtaGVhZGVyJykbWzIybQobWzJtICAgICAgMjUgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtICAgICAgMjYgfCB9KRtbMjJtChtbMm0bWzIybQobWzJtICAgICAgG1sybWF0IE9iamVjdC50ZXN0ICgbWzIybRtbMm0bWzBtG1szNm0ubGVhcm4vZXhlcmNpc2VzLzExLXBvc3RjYXJkLWRpdmlzaW9ucy90ZXN0LmpzG1szOW0bWzBtG1sybToyMzoxKRtbMjJtG1sybRtbMjJtCgobWzFtG1szMW0gIBtbMW3il48gG1syMm0bWzFtQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtYm9keSBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1ib2R5IGRvbid0IGV4aXN0IGluc2lkZSAucG9zdGNhcmQbWzBtIgobWzJtG1syMm0KG1sybSAgICAgIDI2IHwgfSkbWzIybQobWzJtICAgICAgMjcgfBtbMjJtChtbMm0gICAgPiAyOCB8IHRlc3QoIkNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWJvZHkgYXMgY2hpbGQgb2YgLnBvc3RjYXJkIiwgZnVuY3Rpb24oKXsbWzIybQobWzJtICAgICAgICAgfCBeG1syMm0KG1sybSAgICAgIDI5IHwgICAgIGRvbSA9IGZyb21GaWxlKCk7G1syMm0KG1sybSAgICAgIDMwIHwgICAgIGNvbnN0IGU9ZG9tLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0Y2FyZCcpLmluc2lkZSgpLnF1ZXJ5U2VsZWN0b3IoJy5wb3N0Y2FyZC1ib2R5JykbWzIybQobWzJtICAgICAgMzEgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudGVzdCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS1wb3N0Y2FyZC1kaXZpc2lvbnMvdGVzdC5qcxtbMzltG1swbRtbMm06Mjg6MSkbWzIybRtbMm0bWzIybQoKG1sxbRtbMzFtICAbWzFt4pePIBtbMjJtG1sxbUNyZWF0ZSBhIGRpdiB3aXRoIGNsYXNzIHBvc3RjYXJkLWZvb3RlciBhcyBjaGlsZCBvZiAucG9zdGNhcmQbWzM5bRtbMjJtCgogICAgdGhyb3duOiAiG1szM21FbGVtZW50IHdpdGggY3NzIHNlbGVjdG9yIC5wb3N0Y2FyZC1mb290ZXIgZG9uJ3QgZXhpc3QgaW5zaWRlIC5wb3N0Y2FyZBtbMG0iChtbMm0bWzIybQobWzJtICAgICAgMzIgfCB9KRtbMjJtChtbMm0gICAgICAzMyB8G1syMm0KG1sybSAgICA+IDM0IHwgdGVzdCgiQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtZm9vdGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZCIsIGZ1bmN0aW9uKCl7G1syMm0KG1sybSAgICAgICAgIHwgXhtbMjJtChtbMm0gICAgICAzNSB8ICAgICBkb20gPSBmcm9tRmlsZSgpOxtbMjJtChtbMm0gICAgICAzNiB8ICAgICBjb25zdCBlPWRvbS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQnKS5pbnNpZGUoKS5xdWVyeVNlbGVjdG9yKCcucG9zdGNhcmQtZm9vdGVyJykbWzIybQobWzJtICAgICAgMzcgfCAgICAgZXhwZWN0KGUpLnRvQmVUcnV0aHkoKTsbWzIybQobWzJtG1syMm0KG1sybSAgICAgIBtbMm1hdCBPYmplY3QudGVzdCAoG1syMm0bWzJtG1swbRtbMzZtLmxlYXJuL2V4ZXJjaXNlcy8xMS1wb3N0Y2FyZC1kaXZpc2lvbnMvdGVzdC5qcxtbMzltG1swbRtbMm06MzQ6MSkbWzIybRtbMm0bWzIybQosCgogICB1bmRlZmluZWQgCgogICAgIBtbMzJtG1sxbeKckyAoZG9uZSkbWzIybRtbMzltIDAuIBtbMzdtTWFrZSBzdXJlIHlvdSBoYXZlIHlvdXIgaW5kZXguaHRtbBtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMS4gG1szN21NYWtlIHN1cmUgeW91IGNyZWF0ZWQgdGhlIHN0eWxlcy5jc3MgZmlsZRtbMzltCiAgICAgG1szMm0bWzFt4pyTIChkb25lKRtbMjJtG1szOW0gMi4gG1szN21NYWtlIHN1cmUgeW91ciBpbmRleC5odG1sIGNvbnRhaW5zIHRoZSA8bGluaz4gdGFnG1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gMy4gG1szN21DcmVhdGUgYSBkaXYgd2l0aCBjbGFzcyBwb3N0Y2FyZC1oZWFkZXIgYXMgY2hpbGQgb2YgLnBvc3RjYXJkG1szOW0KICAgICAbWzMxbRtbMW14IChmYWlsKRtbMjJtG1szOW0gNC4gG1szN21DcmVhdGUgYSBkaXYgd2l0aCBjbGFzcyBwb3N0Y2FyZC1ib2R5IGFzIGNoaWxkIG9mIC5wb3N0Y2FyZBtbMzltCiAgICAgG1szMW0bWzFteCAoZmFpbCkbWzIybRtbMzltIDUuIBtbMzdtQ3JlYXRlIGEgZGl2IHdpdGggY2xhc3MgcG9zdGNhcmQtZm9vdGVyIGFzIGNoaWxkIG9mIC5wb3N0Y2FyZBtbMzltIAoK","exit_code":1},{"starting_at":1727223875082,"ended_at":1727223876347,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727223376387,"completed_at":1727223876348},{"slug":"11.1-header-content","position":13,"files":[{"path":".learn/exercises/11.1-header-content/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11.1-header-content/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11.1-header-content/solution.hide.css","name":"solution.hide.css","hidden":true},{"path":".learn/exercises/11.1-header-content/solution.hide.html","name":"solution.hide.html","hidden":true},{"path":".learn/exercises/11.1-header-content/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727224082949,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:28:02.949Z","exit_code":0},{"starting_at":1727224114555,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:28:34.555Z","exit_code":0},{"starting_at":1727224162861,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:29:22.861Z","exit_code":0}],"tests":[{"starting_at":1727224186186,"ended_at":1727224187678,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727223902483,"completed_at":1727224187678},{"slug":"11.2-header-styles","position":14,"files":[{"path":".learn/exercises/11.2-header-styles/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/11.2-header-styles/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/11.2-header-styles/test.js","name":"test.js","hidden":true}],"ai_interactions":[{"starting_at":1727224610270,"student_message":"how to get the image to be in the corner \n","context":"---\n      # File name: test.js. Content: \n      `const fs = require(\"fs\");\nconst path = require(\"path\");\nconst { fromFile, fromHTML } = require(\"../../utils/dom\");\nlet dom = fromFile();\n\ntest(\"In your CSS create a .postcard-header class that will apply styles to the .postcard-header <div>\", function(){\n    dom = dom.withStylesheet();\n    dom.selector('.postcard-header');\n    expect(dom).toBeTruthy();\n})\n\ntest(\"The .postcard-header <div> must have a display:flex to allow its childs to display horizontally\", function(){\n    dom = dom.withStylesheet();\n    dom.selector('.postcard-header').hasStyles({\n        display: \"flex\",\n    })\n})\n`\n      ---\n      \n---\n      # File name: .devcontainer. Content: \n      `Error: This is not a file to be read, but a directory: ./.devcontainer`\n      ---\n      \n---\n      # File name: .exercise. Content: \n      `Error: This is not a file to be read, but a directory: ./.exercise`\n      ---\n      \n---\n      # File name: .git. Content: \n      `Error: This is not a file to be read, but a directory: ./.git`\n      ---\n      \n---\n      # File name: .github. Content: \n      `Error: This is not a file to be read, but a directory: ./.github`\n      ---\n      \n---\n      # File name: .gitignore. Content: \n      `.theia\n\n.learn/_app\n.learn/.session\n.learn/dist\n.learn/reports\napp.tar.gz\nconfig.json\nvscode_queue.json\n!.vscode`\n      ---\n      \n---\n      # File name: .gitpod.Dockerfile. Content: \n      `FROM gitpod/workspace-full\n\nUSER gitpod\n\nRUN npm i jest@29.7.0 jest-environment-jsdom@29.7.0 -g\nRUN npm i @learnpack/learnpack@4.0.8 -g && learnpack plugins:install @learnpack/node@1.1.12 && learnpack plugins:install @learnpack/html@1.1.7\n`\n      ---\n      \n---\n      # File name: .gitpod.yml. Content: \n      `image:\n  file: .gitpod.Dockerfile\n\n# List the ports you want to expose and what to do when they are served. See https://www.gitpod.io/docs/config-ports/\nports:\n  - port: 3000\n    onOpen: ignore\n\nvscode:\n  extensions:\n    - learn-pack.learnpack-vscode\n    \ngithub:\n    prebuilds:\n        # enable for the master/default branch (defaults to true)\n        master: true\n        # enable for pull requests coming from this repo (defaults to true)\n        pullRequests: false\n        # add a \"Review in Gitpod\" button as a comment to pull requests (defaults to true)\n        addComment: false\n`\n      ---\n      \n---\n      # File name: .learn. Content: \n      `Error: This is not a file to be read, but a directory: ./.learn`\n      ---\n      \n---\n      # File name: .vscode. Content: \n      `Error: This is not a file to be read, but a directory: ./.vscode`\n      ---\n      \n---\n      # File name: README.es.md. Content: \n      `<!-- hide -->\n# La Postal \n<!-- endhide -->\n\n¬øA qui√©n no le gustan las postales? Este es uno de tus primeros ejercicios (si no es el primero) y es divertido y relativamente f√°cil :)\n\nVamos a crear una postal con HTML5 y CSS y luego puedes compartirla con tu madre o con tu otra mitad, ¬°ella/√©l se va a sentir orgullosa/o! :)\n\n## üå±  ¬øC√≥mo iniciar este proyecto?\n\n1. Asegura que ya tienes una cuenta en GitHub:  https://github.com\n2. Recomendamos que abras este repositorio utilizando un entorno de desarrollo como [Codespaces](https://4geeks.com/es/lesson/tutorial-de-github-codespaces) (recomendado) o [Gitpod](https://4geeks.com/es/lesson/como-utilizar-gitpod). Como √∫ltima opci√≥n puedes clonar el repositorio localmente en tu computador utilizando el comando `git clone`.\n\nEste es el repositorio que debes abrir:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Sigue las siguientes instrucciones sobre** [c√≥mo empezar un proyecto nuevo](https://4geeks.com/es/lesson/como-comenzar-un-proyecto-de-codificacion). Importante --> √âste repositorio no es un template.\n\n## Instrucciones\n\nCrea el HTML y CSS necesario para replicar [esta imagen de forma precisa](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true)\n\n> ‚úã Aqu√≠ tienes la url del logo de 4Geeks: [http://assets.breatheco.de/apis/img/icon/4geeks.png](http://assets.breatheco.de/apis/img/icon/4geeks.png)\n\n## Empieza por dibujar tu estrategia\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/strategy.gif?raw=true)\n\n## ¬øQu√© hacer si est√°s atascado?\n\nHay un video sobre este ejercicio, m√≠ralo si est√°s perdido. Pero no copies todo, trata de colocar tu propio c√≥digo.\n\n## Fundamentos\nEste ejercicio cubre los siguientes fundamentos:\n\n1. Estructura b√°sica para cada sitio web HTML5.  \n2. La etiqueta *Link* para importar Reglas CSS.  \n3. Uso de fuentes de google.  \n3. Uso de diferentes selectores disponibles en CSS.  \n4. Trabajar con contenedores o cajas: border, padding y margins.  \n5. Overflow.  \n6. Uso de un formulario simple.  \n\nEste y otros ejercicios son usados para [aprender a programar](https://4geeksacademy.com/es/aprender-a-programar/aprender-a-programar-desde-cero) por parte de los alumnos de 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) realizado por [Alejandro S√°nchez](https://twitter.com/alesanchezr) y muchos otros contribuyentes. Conoce m√°s sobre nuestros [Cursos de Programaci√≥n](https://4geeksacademy.com/es/curso-de-programacion-desde-cero?lang=es) para convertirte en [Full Stack Developer](https://4geeksacademy.com/es/coding-bootcamps/desarrollador-full-stack/?lang=es), o nuestro [Data Science Bootcamp](https://4geeksacademy.com/es/coding-bootcamps/curso-datascience-machine-learning).\n`\n      ---\n      \n---\n      # File name: README.md. Content: \n      `<!-- hide -->\n# The Postcard\n<!-- endhide -->\n\nWho doesn't like postcards? This is one of your first exercises (if not the first), and it's fun and relatively easy :)\n\nLet's create a postcard with HTML5 and CSS3, and then you can share it with your mom or your other half; they will be proud! :)\n\n## üå±  How to start this project?\n\n1. Make sure you have a Github account at:  https://github.com\n2. We recommend opening this repository using a provisioning tool like [Codespaces](https://4geeks.com/lesson/what-is-github-codespaces) (recommended) or [Gitpod](https://4geeks.com/lesson/how-to-use-gitpod). Alternatively, you can clone it on your local computer using the `git clone` command. \n\nThis is the repository you need to open or clone:\n\n```text\nhttps://github.com/breatheco-de/exercise-postcard\n```\n\n**üëâ Please follow these steps on** [how to start a coding project](https://4geeks.com/lesson/how-to-start-a-project). IMPORTANT --> this repo isn't a template. \n\n\n3. The exercises will start and show the instructions automatically, but if you encounter any issues, you can try running them manually by typing in your command line the following:\n\n```bash\n$ learnpack start\n```\n\n## Instructions\n\nCreate the HTML and CSS3 needed to replicate [this exact same picture](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png).\n\n![postcard preview](https://raw.githubusercontent.com/breatheco-de/exercise-postcard/main/.learn/assets/preview.png)\n\n> ‚úã Here is the url for the 4Geeks logo: [https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true](https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/4geeks.png?raw=true)\n\n## Create by drawing your strategy\n\n![Postcard Strategy](https://github.com/breatheco-de/exercise-postcard/raw/main/.learn/assets/strategy.gif?raw=true)\n\n## You can add different fonts by using free [Google Fonts](https://fonts.google.com/)\n\n1. Click on the font you like.\n\n2. Click get font.\n\n3. Click on Embed code.\n\n4. Add the link tags to your html file.\n\n\n## What to do if you are stuck?\n\nThere is a video about this exercise, watch it if you are lost. But don't copy everything, try to code some of your own.\n\n## Fundamentals\nThis exercise covers the following fundamentals:\n1. Basic structure for every HTML5 website.  \n2. The *Link* tag to import CSS3 Rules.  \n3. Using google fonts.  \n3. Using the different selectors available in CSS3.  \n4. Working with containers or boxes: border, padding, and margins.  \n5. Overflow.  \n6. Using a simple form.  \n\nThis and many other exercises are built by students as part of the 4Geeks Academy [Coding Bootcamp](https://4geeksacademy.com/us/coding-bootcamp) by [Alejandro S√°nchez](https://twitter.com/alesanchezr) and many other contributors. Find out more about our [Full Stack Developer Course](https://4geeksacademy.com/us/coding-bootcamps/part-time-full-stack-developer), and  [Data Science Bootcamp](https://4geeksacademy.com/us/coding-bootcamps/datascience-machine-learning).\n\n\n`\n      ---\n      \n---\n      # File name: index.html. Content: \n      `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n\t\t<title>Postcard</title>\n\t\t<link rel=\"stylesheet\" href=\"styles.css\" />\n\t</head>\n\t<body>\n\t\t<div class=\"postcard\">\n\t\t\t<div class=\"postcard-header\">\n\t\t\t\t<h1>My Postcard</h1>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"https://raw.githubusercontent.com/breatheco-de/exercise-postcard/e63a7916530cc850bd92aa1c2e19191837fb5c80/.learn/assets/4geeks.png\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"postcard-body\"></div>\n\t\t\t<div class=\"postcard-footer\"></div>\n\t\t</div>\n\t</body>\n</html>\n`\n      ---\n      \n---\n      # File name: learn.json. Content: \n      `{\n    \"title\": \"Build a Digital Postcard with HTML/CSS\",\n    \"slug\": \"exercise-postcard\",\n    \"status\": \"published\",\n    \"grading\": \"incremental\",\n    \"translations\": [\n        \"es\",\n        \"us\"\n    ],\n    \"repository\": \"https://github.com/breatheco-de/exercise-postcard\",\n    \"solution\": \"https://github.com/breatheco-de/exercise-postcard/tree/solution\",\n    \"duration\": 4,\n    \"language\": \"auto\",\n    \"skills\": [\n        \"html-layouts\"\n    ],\n    \"difficulty\": \"beginner\",\n    \"videoSolutions\": true, \n    \"bugsLink\": \"https://github.com/learnpack/learnpack/issues/new\",\n    \"projectType\": \"tutorial\",\n    \"technologies\": [\n        \"html\",\n        \"css\",\n\t\"layouts\"\n    ],\n    \"description\": \"Replicate this postcard with CSS and HTML\",\n    \"preview\": \"https://github.com/breatheco-de/exercise-postcard/blob/main/.learn/assets/preview.png?raw=true\",\n    \"talents\": [\n        {\n            \"badge\": \"identator\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"tag-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"path-master\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"select-everything\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"be-dry\",\n            \"points\": 10\n        },\n        {\n            \"badge\": \"abc\",\n            \"points\": 10\n        }\n    ],\n    \"editor\": {\n        \"version\": \"4.0.0\"\n    },\n\t\"video\": {\n\t\t\"intro\": {\n\t\t\t\"en\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\",\n\t\t\t\"es\": \"https://www.youtube.com/watch?v=rvVPyewhFSU\"\n\t\t}\n    }\n}\n`\n      ---\n      \n---\n      # File name: styles.css. Content: \n      `body {\n\tbackground: black;\n}\n* {\n\tborder: 1px dashed red;\n\tmin-height: 10px;\n}\n.postcard {\n\tbackground: white;\n\twidth: 400px;\n\theight: 300px;\n\tmargin: auto;\n}\n.postcard-header {\n\tdisplay: flex;\n}\n.postcard-header img {\n\theight: 50px;\n\twidth: 50px;\n}\n.postcard-header h1 {\n\twidth: x;\n\tmargin: x;\n}\n`\n      ---\n      \n      ---This is the current exercise instructions:\n      # `11.2` Header Styles\n\nIf you build your postcard and preview, you will come to the following conclusions:\n\n1. The image needs to be on the right instead of below the title.\n\n2. We need to make the image smaller.\n\nTo move the image to the right you can use the `display:flex` property. When you apply it to any `<div>`, all of its children will be arranged horizontally instead of vertically (by default).\n\n![display flex vs block](../../assets/display-block-vs-flex.png?raw=true)\n\nOn the other hand, to make the image smaller we have to use the CSS properties: `width` and `height`.\n\n## üìù Instructions:\n\n1. Apply a `display:flex` property to the `.postcard-header`.\n\n```css\n.postcard-header {\n\tdisplay: x;\n}\n```\n\n2. Apply to the image a smaller `width` and `height`, to make it quite a bit smaller, maybe `50px x 50px`.\n\n```css \n.postcard-header img {\n\twidth: x;\n\theight: x;\n}\n```\n\n3. Make the `<h1>` much wider to push the image to the right side of the postcard. Also remove the margins from the `<h1>`.\n\n```css\n.postcard-header h1 {\n\twidth: x;\n\tmargin: x;\n}\n```\n\n## Expected Result:\n\n+ At the end your exercise should look similar to this one:\n\n    ![Preview](../../assets/header-styles.png?raw=true)\n\n>‚ö†Ô∏è Note: We are going to be a little bit more flexible with the tests, we want to leave you space to try things on your own. Please, compare your website preview with the expected image and keep trying!\n\n      ---\n      \n      <MANDATORY FOR AI: The user's set up the application in \"us\" language, give your feedback in \"us\" language, please.>\n\n      \nThe tests passed succesfully, tell the user to pass to the next exercise and give him a congrats message: ‚úÖ All tests passed successfully!","ending_at":1727224615123,"ai_response":"To get the image to be in the corner, you need to ensure that the `.postcard-header` is using `display: flex` and then use `margin-left: auto` on the image to push it to the right. Here's a step-by-step approach:\n\n1. Ensure that the `.postcard-header` has `display: flex` to arrange its children horizontally.\n2. Apply `margin-left: auto` to the image to push it to the right.\n\nLet's break it down:\n\n1. **Apply `display: flex` to `.postcard-header`:**\n    ```css\n    .postcard-header {\n        display: flex;\n    }\n    ```\n\n2. **Apply `margin-left: auto` to the image:**\n    ```css\n    .postcard-header img {\n        width: 50px;\n        height: 50px;\n        margin-left: auto;\n    }\n    ```\n\nThis will push the image to the right corner of the `.postcard-header` div. \n\nWould you like to try implementing these changes and see how it looks?"}],"compilations":[{"starting_at":1727224469897,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:34:29.897Z","exit_code":0},{"starting_at":1727224498854,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:34:58.854Z","exit_code":0},{"starting_at":1727224515448,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:35:15.448Z","exit_code":0},{"starting_at":1727224519977,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:35:19.977Z","exit_code":0},{"starting_at":1727224534640,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:35:34.640Z","exit_code":0},{"starting_at":1727224647281,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:37:27.281Z","exit_code":0},{"starting_at":1727224714910,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:38:34.910Z","exit_code":0},{"starting_at":1727224731598,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:38:51.598Z","exit_code":0},{"starting_at":1727224784887,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:39:44.887Z","exit_code":0},{"starting_at":1727224814585,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:40:14.585Z","exit_code":0},{"starting_at":1727224844600,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:40:44.600Z","exit_code":0},{"starting_at":1727224912400,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:41:52.400Z","exit_code":0},{"starting_at":1727224931274,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:42:11.274Z","exit_code":0},{"starting_at":1727224942023,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:42:22.023Z","exit_code":0},{"starting_at":1727224962404,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:42:42.404Z","exit_code":0},{"starting_at":1727224990482,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:43:10.482Z","exit_code":0},{"starting_at":1727225040831,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:44:00.831Z","exit_code":0},{"starting_at":1727225075505,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:44:35.505Z","exit_code":0},{"starting_at":1727225098521,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:44:58.521Z","exit_code":0},{"starting_at":1727225121202,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:45:21.202Z","exit_code":0},{"starting_at":1727225130641,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:45:30.641Z","exit_code":0},{"starting_at":1727225199651,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:46:39.651Z","exit_code":0},{"starting_at":1727225218164,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:46:58.164Z","exit_code":0},{"starting_at":1727225229497,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:47:09.497Z","exit_code":0},{"starting_at":1727225255968,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:47:35.968Z","exit_code":0},{"starting_at":1727225300718,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:48:20.718Z","exit_code":0},{"starting_at":1727225325768,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:48:45.768Z","exit_code":0},{"starting_at":1727225341511,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:49:01.511Z","exit_code":0},{"starting_at":1727225356065,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:49:16.065Z","exit_code":0},{"starting_at":1727225369607,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:49:29.607Z","exit_code":0},{"starting_at":1727225393356,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:49:53.356Z","exit_code":0},{"starting_at":1727225408991,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:50:08.991Z","exit_code":0},{"starting_at":1727225430311,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:50:30.311Z","exit_code":0}],"tests":[{"starting_at":1727224607541,"ended_at":1727224608984,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0},{"starting_at":1727225415847,"ended_at":1727225417028,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727224189414,"completed_at":1727225417028},{"slug":"12-split-postcard-body","position":15,"files":[{"path":".learn/exercises/12-split-postcard-body/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/12-split-postcard-body/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/12-split-postcard-body/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727225706286,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T00:55:06.286Z","exit_code":0}],"tests":[{"starting_at":1727225719239,"ended_at":1727225720682,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727225451405,"completed_at":1727225720682},{"slug":"12.1-body-content","position":16,"files":[{"path":".learn/exercises/12.1-body-content/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/12.1-body-content/README.md","name":"README.md","hidden":true},{"path":".learn/exercises/12.1-body-content/test.js","name":"test.js","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727226195597,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:03:15.597Z","exit_code":0},{"starting_at":1727226228794,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:03:48.794Z","exit_code":0},{"starting_at":1727226240055,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:04:00.055Z","exit_code":0},{"starting_at":1727226298414,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:04:58.414Z","exit_code":0},{"starting_at":1727226326938,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:05:26.938Z","exit_code":0},{"starting_at":1727226348618,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:05:48.618Z","exit_code":0},{"starting_at":1727226357215,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:05:57.215Z","exit_code":0},{"starting_at":1727226394424,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:06:34.424Z","exit_code":0},{"starting_at":1727226469349,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:07:49.349Z","exit_code":0},{"starting_at":1727226489588,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:08:09.588Z","exit_code":0},{"starting_at":1727226617348,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:10:17.348Z","exit_code":0},{"starting_at":1727226779028,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:12:59.028Z","exit_code":0},{"starting_at":1727226820619,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:13:40.619Z","exit_code":0},{"starting_at":1727226860140,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:14:20.140Z","exit_code":0},{"starting_at":1727226959759,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:15:59.759Z","exit_code":0},{"starting_at":1727227055326,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:17:35.326Z","exit_code":0},{"starting_at":1727227171791,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:19:31.791Z","exit_code":0},{"starting_at":1727227356822,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T01:22:36.822Z","exit_code":0},{"starting_at":1727301085202,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T21:51:25.202Z","exit_code":0},{"starting_at":1727301775719,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:02:55.719Z","exit_code":0},{"starting_at":1727301819839,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:03:39.839Z","exit_code":0},{"starting_at":1727301853649,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:04:13.649Z","exit_code":0},{"starting_at":1727301875738,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:04:35.738Z","exit_code":0},{"starting_at":1727302057776,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:07:37.776Z","exit_code":0},{"starting_at":1727302368059,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:12:48.059Z","exit_code":0},{"starting_at":1727302430381,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:13:50.381Z","exit_code":0},{"starting_at":1727302460495,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:14:20.495Z","exit_code":0},{"starting_at":1727302490617,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:14:50.617Z","exit_code":0},{"starting_at":1727302502780,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:15:02.780Z","exit_code":0},{"starting_at":1727302558000,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:15:58.000Z","exit_code":0},{"starting_at":1727302696100,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:18:16.100Z","exit_code":0},{"starting_at":1727303220430,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:27:00.430Z","exit_code":0},{"starting_at":1727303241763,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:27:21.763Z","exit_code":0},{"starting_at":1727303349516,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:29:09.516Z","exit_code":0},{"starting_at":1727303392917,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:29:52.917Z","exit_code":0},{"starting_at":1727303691500,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:34:51.500Z","exit_code":0},{"starting_at":1727303694573,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:34:54.573Z","exit_code":0},{"starting_at":1727303734790,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:35:34.790Z","exit_code":0},{"starting_at":1727303793548,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:36:33.548Z","exit_code":0},{"starting_at":1727303886551,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:38:06.551Z","exit_code":0},{"starting_at":1727304042843,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:40:42.843Z","exit_code":0},{"starting_at":1727304321741,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:45:21.741Z","exit_code":0},{"starting_at":1727304346511,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:45:46.511Z","exit_code":0},{"starting_at":1727304444484,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:47:24.484Z","exit_code":0},{"starting_at":1727304494052,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:48:14.052Z","exit_code":0},{"starting_at":1727304577014,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:49:37.014Z","exit_code":0},{"starting_at":1727304612619,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:50:12.619Z","exit_code":0},{"starting_at":1727304631526,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:50:31.526Z","exit_code":0},{"starting_at":1727304653045,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:50:53.045Z","exit_code":0},{"starting_at":1727304699801,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:51:39.801Z","exit_code":0},{"starting_at":1727304757975,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:52:37.975Z","exit_code":0},{"starting_at":1727305027046,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:57:07.046Z","exit_code":0},{"starting_at":1727305079181,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:57:59.181Z","exit_code":0},{"starting_at":1727305082334,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:58:02.334Z","exit_code":0},{"starting_at":1727305145421,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T22:59:05.421Z","exit_code":0},{"starting_at":1727305244952,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:00:44.952Z","exit_code":0},{"starting_at":1727305269815,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:01:09.815Z","exit_code":0},{"starting_at":1727305302721,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:01:42.721Z","exit_code":0},{"starting_at":1727305332368,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:02:12.368Z","exit_code":0},{"starting_at":1727305352690,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:02:32.690Z","exit_code":0}],"tests":[{"starting_at":1727305389523,"ended_at":1727305392186,"source_code":"","stdout":"G1szMm3inIUgQWxsIHRlc3RzIHBhc3NlZCBzdWNjZXNzZnVsbHkhG1szOW0=","stderr":"","exit_code":0}],"is_testeable":true,"opened_at":1727225722166,"completed_at":1727305392187},{"slug":"13-check-your-code","position":17,"files":[{"path":".learn/exercises/13-check-your-code/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/13-check-your-code/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727305727603,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:08:47.603Z","exit_code":0},{"starting_at":1727305755900,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:09:15.900Z","exit_code":0},{"starting_at":1727305797944,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:09:57.944Z","exit_code":0},{"starting_at":1727305816793,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:10:16.793Z","exit_code":0},{"starting_at":1727305819847,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:10:19.847Z","exit_code":0},{"starting_at":1727305864020,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:11:04.020Z","exit_code":0},{"starting_at":1727305898624,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:11:38.624Z","exit_code":0},{"starting_at":1727306322651,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:18:42.651Z","exit_code":0},{"starting_at":1727306348428,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:19:08.428Z","exit_code":0},{"starting_at":1727306379346,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:19:39.346Z","exit_code":0},{"starting_at":1727306389808,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:19:49.808Z","exit_code":0},{"starting_at":1727306445687,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:20:45.687Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1727305397618,"completed_at":1727305565298},{"slug":"14-goodbye","position":18,"files":[{"path":".learn/exercises/14-goodbye/README.es.md","name":"README.es.md","hidden":true},{"path":".learn/exercises/14-goodbye/README.md","name":"README.md","hidden":true}],"ai_interactions":[],"compilations":[{"starting_at":1727305954876,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:12:34.876Z","exit_code":0},{"starting_at":1727306102209,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:15:02.209Z","exit_code":0},{"starting_at":1727306118283,"source_code":"","stdout":"U3VjY2Vzc2Z1bGx5IGJ1aWx0IHlvdXIgSFRNTA==","ended_at":"2024-09-25T23:15:18.283Z","exit_code":0}],"tests":[],"is_testeable":false,"opened_at":1727305928875,"completed_at":1727306263508}],"workout_session":[{"started_at":1727220579105,"ended_at":1727227356822},{"started_at":1727300977230}],"user_id":12431,"last_interaction_at":1727306445688}